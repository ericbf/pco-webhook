// Generated by https://quicktype.io

export interface ServiceTypes {
	links: Links
	data: Datum[]
	included: any[]
	meta: Meta
}

interface Datum {
	type: string
	id: string
	attributes: Attributes
	relationships: Relationships
	links: Links
}

interface Attributes {
	archived_at: null
	attachment_types_enabled: boolean
	background_check_permissions: string
	comment_permissions: string
	created_at: string
	custom_item_types: any[]
	deleted_at: null
	frequency: string
	last_plan_from: string
	name: string
	permissions: string
	sequence: number
	standard_item_types: StandardItemType[]
	updated_at: string
}

interface StandardItemType {
	name: Name
	color: Color
}

enum Color {
	Eaebeb = "#eaebeb",
	Ffffff = "#ffffff"
}

enum Name {
	Header = "Header",
	Media = "Media",
	Song = "Song"
}

interface Links {
	self: string
}

interface Relationships {
	parent: RelationshipsParent
}

interface RelationshipsParent {
	data: DataClass | null
}

interface DataClass {
	type: string
	id: string
}

interface Meta {
	total_count: number
	count: number
	can_order_by: string[]
	can_query_by: string[]
	can_include: string[]
	can_filter: string[]
	parent: DataClass
}
