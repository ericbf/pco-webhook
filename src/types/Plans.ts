// Generated by https://quicktype.io

export interface Plans {
	links: Links
	data: Plan[]
	included: any[]
	meta: Meta
}

export interface Plan {
	type: Type
	id: string
	attributes: Attributes
	relationships: Relationships
	links: Links
}

interface Attributes {
	can_view_order: boolean
	created_at: string
	dates: string
	files_expire_at: string
	items_count: number
	last_time_at: string
	multi_day: boolean
	needed_positions_count: number
	other_time_count: number
	permissions: Permissions
	plan_notes_count: number
	plan_people_count: number
	planning_center_url: string
	prefers_order_view: boolean
	public: boolean
	rehearsable: boolean
	rehearsal_time_count: number
	series_title: string
	service_time_count: number
	short_dates: string
	sort_date: string
	title: Title
	total_length: number
	updated_at: string
}

enum Permissions {
	ScheduledViewer = "Scheduled Viewer"
}

enum Title {
	TheStandFridayPM = "The Stand - Friday PM",
	TheStandThursdayPM = "The Stand - Thursday PM",
	TheStandTuesdayPM = "The Stand - Tuesday PM"
}

interface Links {
	self: string
}

interface Relationships {
	service_type: Relationship
	next_plan: Relationship
	previous_plan: Relationship
	attachment_types: AttachmentTypes
	series: Relationship
	created_by: CreatedBy
	updated_by: Relationship
	linked_publishing_episode: Relationship
}

interface Relationship {
	data: Entity | null
}
interface AttachmentTypes {
	data: Entity[] | null
}

interface Entity {
	type: Type
	id: string
}

enum Type {
	AttachmentType = "AttachmentType",
	Person = "Person",
	Plan = "Plan",
	ServiceType = "ServiceType"
}

interface CreatedBy {
	data: Entity
}

interface Meta {
	total_count: number
	count: number
	can_order_by: string[]
	can_query_by: string[]
	can_include: string[]
	can_filter: string[]
	parent: Entity
}
